{"ast":null,"code":"var _jsxFileName = \"/home/yashakabra/Desktop/React BootCamp/Imagify(NEW)/src/Components/Feed/Feed.js\",\n  _s = $RefreshSig$();\nimport { getMetadata } from \"firebase/storage\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Image from \"./Image\";\nimport Modal from \"./Modal\";\nimport { set } from \"firebase/database\";\nimport { ref } from \"firebase/database\";\nimport { db } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initObj = {\n  id: null,\n  name: null,\n  description: null,\n  author: null,\n  imageurl: null,\n  tag: null,\n  uid: null\n};\nconst Feed = props => {\n  _s();\n  const [imagesArr, setImagesArr] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [modalData, setModalData] = useState(initObj);\n  const [updateData, setUpdatedata] = useState(false);\n  const getData = imageObj => {\n    let tempObj = imageObj;\n    setModalData(tempObj);\n    setModal(true);\n    return;\n  };\n  const deleteHandler = () => {\n    ref(db, `images/${modalData.uid}`).remove();\n  };\n  const fetchImageHandler = useCallback(async () => {\n    try {\n      const response = await fetch('https://reacthttp-d289b-default-rtdb.firebaseio.com/images.json');\n      if (!response.ok) {\n        throw new Error('Something fucked up !');\n      }\n      const data = await response.json();\n      const loadedImages = [];\n      for (const key in data) {\n        loadedImages.push({\n          id: data[key].key,\n          name: data[key].name,\n          description: data[key].description,\n          author: data[key].author,\n          imageurl: data[key].url,\n          tag: data[key].tag,\n          uid: key\n        });\n      }\n      setImagesArr(loadedImages);\n    } catch (error) {}\n  }, []);\n  useEffect(() => {\n    fetchImageHandler();\n  }, [fetchImageHandler]);\n  const closeHandler = () => {\n    setModal(false);\n    setUpdatedata(false);\n  };\n  const updateHandler = () => {\n    setUpdatedata(true);\n  };\n  const finalUpdateHandler = image => {\n    console.log(\"BEFORE SET\");\n    console.log(image.name, image.description, image.tag, image.author);\n    set(ref(db, `images/${modalData.uid}`), {\n      name: image.name,\n      description: image.description,\n      tag: image.tag,\n      author: image.author,\n      url: modalData.imageurl,\n      key: modalData.id\n    });\n    console.log(\"UPDATED\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: imagesArr.map(obj => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            onClick: () => {\n              getData(obj);\n            },\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              image: obj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)\n          }, obj.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), modal && /*#__PURE__*/_jsxDEV(Modal, {\n      deleteImage: deleteHandler,\n      hideModal: () => {\n        setModal(false);\n      },\n      onClose: closeHandler,\n      onUpdate: updateHandler,\n      item: modalData,\n      update: updateData,\n      onFinalUpdate: finalUpdateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(Feed, \"h/L1qLqMMY5dcUkpV8zDEiX6JwQ=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["getMetadata","React","useCallback","useEffect","useState","Image","Modal","set","ref","db","initObj","id","name","description","author","imageurl","tag","uid","Feed","props","imagesArr","setImagesArr","modal","setModal","modalData","setModalData","updateData","setUpdatedata","getData","imageObj","tempObj","deleteHandler","remove","fetchImageHandler","response","fetch","ok","Error","data","json","loadedImages","key","push","url","error","closeHandler","updateHandler","finalUpdateHandler","image","console","log","map","obj"],"sources":["/home/yashakabra/Desktop/React BootCamp/Imagify(NEW)/src/Components/Feed/Feed.js"],"sourcesContent":["import { getMetadata } from \"firebase/storage\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Image from \"./Image\";\nimport Modal from \"./Modal\";\nimport { set } from \"firebase/database\";\nimport { ref } from \"firebase/database\";\nimport { db } from \"../../firebase\";\nconst initObj = {\n    id : null,\n    name : null,\n    description : null,\n    author : null,\n    imageurl : null,\n    tag : null,\n    uid : null,\n}\n\nconst Feed = (props) => {\n    \n    const [imagesArr, setImagesArr] = useState([]);\n    const [modal, setModal] = useState(false);\n    const [modalData, setModalData] = useState(initObj);\n    const [updateData, setUpdatedata] = useState(false);\n\n    const getData = (imageObj) => {\n        let tempObj = imageObj;\n        setModalData(tempObj);\n        setModal(true);\n        return;\n    }\n\n    const deleteHandler = () => {\n        ref(db, `images/${modalData.uid}`).remove()\n    }\n\n    const fetchImageHandler = useCallback(async () => {\n        try{\n            const response = await fetch('https://reacthttp-d289b-default-rtdb.firebaseio.com/images.json');\n            if(!response.ok){\n                throw new Error('Something fucked up !');\n            }\n            const data = await response.json();\n\n            const loadedImages = [];\n            for(const key in data){\n                loadedImages.push({\n                    id : data[key].key,\n                    name : data[key].name,\n                    description : data[key].description,\n                    author : data[key].author,\n                    imageurl : data[key].url,\n                    tag : data[key].tag,\n                    uid : key,\n                });\n            }\n            setImagesArr(loadedImages);\n        }catch(error){\n            \n        }\n    },[]);\n\n    useEffect(()=>{\n        fetchImageHandler();\n    }, [fetchImageHandler]);\n\n    const closeHandler = () => {\n        setModal(false);\n        setUpdatedata(false);\n    }\n\n    const updateHandler = () => {\n        setUpdatedata(true);\n    }\n\n    const finalUpdateHandler = (image) => {\n        console.log(\"BEFORE SET\");\n        console.log(image.name, image.description, image.tag, image.author);\n        set(ref(db, `images/${modalData.uid}`),{\n            name : image.name,\n            description : image.description,\n            tag : image.tag,\n            author : image.author,\n            url : modalData.imageurl,\n            key : modalData.id\n        });\n        console.log(\"UPDATED\");\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"row\">\n                    {imagesArr.map((obj) => {\n                        return (\n                            <div className=\"col-md-4\" key={obj.id} onClick={()=>{\n                                getData(obj);\n                            }}>\n                                <Image image={obj}/>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n            {modal && <Modal deleteImage={deleteHandler} hideModal={()=>{setModal(false)}} onClose={closeHandler} onUpdate={updateHandler} item={modalData} update={updateData} onFinalUpdate = {finalUpdateHandler}/>}\n        </div>\n    );\n}\nexport default Feed;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}