{"ast":null,"code":"var _jsxFileName = \"/home/yashakabra/Desktop/React BootCamp/Imagify/src/Components/Feed/Feed.js\",\n  _s2 = $RefreshSig$();\nimport { getDownloadURL, listAll, ref } from \"firebase/storage\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { storage } from \"../../firebase\";\nimport Image from \"./Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  const arr = {\n    imageurl: \"./img1.jpg\",\n    name: \"Image Name1\",\n    description: \"Image Description1\",\n    author: \"Image Owner1\"\n  };\n  const [images, setImages] = useState([]);\n  const fetchImageHandler = _s(useCallback(_s(async () => {\n    _s();\n    const [url, setUrl] = useState('');\n    const response = await fetch('https://reacthttp-d289b-default-rtdb.firebaseio.com/images.json');\n    if (!response.ok) {\n      throw new Error('Something went wrong');\n    }\n    const data = await response.json();\n    const loadedImages = [];\n    for (const k in data) {\n      // const imageurl = '';\n      // const imageRef = ref(storage, `image/${data[k].key}`);\n      // listAll(imageRef).then((response) => {\n      //     response.items.forEach((item) => {\n      //         getDownloadURL(item).then((url) => {\n      //             imageurl = url;\n      //         });\n      //     })\n      // });\n      storage.ref(\"images\").child(datakey).getDownloadURL().then(url => {\n        setUrl(url);\n      });\n      console.log(imageurl, data[k].key, data[k].name, data[k].description);\n      loadedImages.push({\n        imageurl: imageurl,\n        id: data[k].key,\n        name: data[k].name,\n        description: data[k].description,\n        author: data[k].author\n      });\n    }\n    console.log(\"HELLO\");\n    setImages(loadedImages);\n  }, \"ZV/BRor2ecoM1gSD+06O4c7I8qc=\"), []), \"ZV/BRor2ecoM1gSD+06O4c7I8qc=\");\n  useEffect(() => {\n    fetchImageHandler();\n  }, [fetchImageHandler]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: images.map(image => {\n        /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            items: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s2(Feed, \"Lbe1hjAOrzPATuZTDQ5mXAaV/2U=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["getDownloadURL","listAll","ref","React","useCallback","useEffect","useState","storage","Image","Feed","props","arr","imageurl","name","description","author","images","setImages","fetchImageHandler","url","setUrl","response","fetch","ok","Error","data","json","loadedImages","k","child","datakey","then","console","log","key","push","id","map","image"],"sources":["/home/yashakabra/Desktop/React BootCamp/Imagify/src/Components/Feed/Feed.js"],"sourcesContent":["import { getDownloadURL, listAll, ref } from \"firebase/storage\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { storage } from \"../../firebase\";\nimport Image from \"./Image\";\n\nconst Feed = (props) => {\n    const arr ={\n        imageurl:\"./img1.jpg\",\n        name: \"Image Name1\",\n        description: \"Image Description1\",\n        author: \"Image Owner1\"\n    };\n\n    const [images, setImages] = useState([]);\n\n    const fetchImageHandler = useCallback(async ()=> {\n        const [url, setUrl] = useState('');\n        \n        const response = await fetch ('https://reacthttp-d289b-default-rtdb.firebaseio.com/images.json');\n        if(!response.ok){\n            throw new Error('Something went wrong');\n        }\n        const data = await response.json();\n        const loadedImages = [];\n        for(const k in data){\n            // const imageurl = '';\n            // const imageRef = ref(storage, `image/${data[k].key}`);\n            // listAll(imageRef).then((response) => {\n            //     response.items.forEach((item) => {\n            //         getDownloadURL(item).then((url) => {\n            //             imageurl = url;\n            //         });\n            //     })\n            // });\n            storage.ref(\"images\").child(datakey).getDownloadURL().then((url) => {\n                setUrl(url);\n            });\n            console.log(imageurl, data[k].key, data[k].name, data[k].description);\n            loadedImages.push({\n                imageurl:imageurl,\n                id:data[k].key,\n                name:data[k].name,\n                description:data[k].description,\n                author:data[k].author\n            });\n\n        }\n        console.log(\"HELLO\");\n        setImages(loadedImages);\n    }, []);\n\n    useEffect(()=> { \n        fetchImageHandler();\n    }, [fetchImageHandler]);\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                {images.map((image) => {\n                    <div className=\"col-4\">\n                        <Image items={image}/>\n                    </div>\n                })}\n            </div>\n        </div>\n    );\n}\nexport default Feed;"],"mappings":";;AAAA,SAASA,cAAc,EAAEC,OAAO,EAAEC,GAAG,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,KAAK,MAAM,SAAS;AAAC;AAE5B,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EAAA;EACpB,MAAMC,GAAG,GAAE;IACPC,QAAQ,EAAC,YAAY;IACrBC,IAAI,EAAE,aAAa;IACnBC,WAAW,EAAE,oBAAoB;IACjCC,MAAM,EAAE;EACZ,CAAC;EAED,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,iBAAiB,MAAGd,WAAW,IAAC,YAAW;IAAA;IAC7C,MAAM,CAACe,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;IAElC,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAE,iEAAiE,CAAC;IAChG,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;MACZ,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IAC3C;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IAClC,MAAMC,YAAY,GAAG,EAAE;IACvB,KAAI,MAAMC,CAAC,IAAIH,IAAI,EAAC;MAChB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAlB,OAAO,CAACL,GAAG,CAAC,QAAQ,CAAC,CAAC2B,KAAK,CAACC,OAAO,CAAC,CAAC9B,cAAc,EAAE,CAAC+B,IAAI,CAAEZ,GAAG,IAAK;QAChEC,MAAM,CAACD,GAAG,CAAC;MACf,CAAC,CAAC;MACFa,OAAO,CAACC,GAAG,CAACrB,QAAQ,EAAEa,IAAI,CAACG,CAAC,CAAC,CAACM,GAAG,EAAET,IAAI,CAACG,CAAC,CAAC,CAACf,IAAI,EAAEY,IAAI,CAACG,CAAC,CAAC,CAACd,WAAW,CAAC;MACrEa,YAAY,CAACQ,IAAI,CAAC;QACdvB,QAAQ,EAACA,QAAQ;QACjBwB,EAAE,EAACX,IAAI,CAACG,CAAC,CAAC,CAACM,GAAG;QACdrB,IAAI,EAACY,IAAI,CAACG,CAAC,CAAC,CAACf,IAAI;QACjBC,WAAW,EAACW,IAAI,CAACG,CAAC,CAAC,CAACd,WAAW;QAC/BC,MAAM,EAACU,IAAI,CAACG,CAAC,CAAC,CAACb;MACnB,CAAC,CAAC;IAEN;IACAiB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpBhB,SAAS,CAACU,YAAY,CAAC;EAC3B,CAAC,mCAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAK;IACXa,iBAAiB,EAAE;EACvB,CAAC,EAAE,CAACA,iBAAiB,CAAC,CAAC;EAEvB,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,uBACtB;MAAK,SAAS,EAAC,KAAK;MAAA,UACfF,MAAM,CAACqB,GAAG,CAAEC,KAAK,IAAK;QACnB;UAAK,SAAS,EAAC,OAAO;UAAA,uBAClB,QAAC,KAAK;YAAC,KAAK,EAAEA;UAAM;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QACpB;MACV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,IA7DK7B,IAAI;AAAA,KAAJA,IAAI;AA8DV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}