{"ast":null,"code":"var _jsxFileName = \"/home/yashakabra/Desktop/React BootCamp/Imagify(NEW)/src/Components/AddImages/AddImages.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport AddImageForm from \"./AddImageForm\";\nimport { getDatabase, set } from \"firebase/database\";\nimport { v4 as uid } from 'uuid';\n// this is also important ki konsa ref utha rhe ho i.e database one or storage one!\n// Yha database wla lena hota h coz we are accessing database\nimport { ref } from \"firebase/database\";\nimport { db } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddImages = props => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Important part here is that we can upload data via two methods, i.e one is simply the fetch onw where firebase will automatically create a child node even after giving proper address\n  // Second method is below one where we can upload images via set method, this uploades / updates images at the exact address we tell it to .\n\n  const addImageHandler = image => {\n    const uuid = uid();\n    set(ref(db, `images/${uuid}`), {\n      name: image.name,\n      description: image.description,\n      tag: image.tag,\n      author: image.author,\n      url: image.url,\n      key: image.key,\n      uid: uuid\n    });\n    console.log(\"UPDATED\");\n    setIsEditing(false);\n  };\n  const showFormHandler = event => {\n    setIsEditing(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showFormHandler,\n        className: \"btn btn-primary btn-lg\",\n        children: \"ADD IMAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AddImageForm, {\n        onAddImage: addImageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(AddImages, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n_c = AddImages;\nexport default AddImages;\nvar _c;\n$RefreshReg$(_c, \"AddImages\");","map":{"version":3,"names":["React","useCallback","useState","AddImageForm","getDatabase","set","v4","uid","ref","db","AddImages","props","isEditing","setIsEditing","addImageHandler","image","uuid","name","description","tag","author","url","key","console","log","showFormHandler","event"],"sources":["/home/yashakabra/Desktop/React BootCamp/Imagify(NEW)/src/Components/AddImages/AddImages.js"],"sourcesContent":["import React, {useCallback, useState} from \"react\";\nimport AddImageForm from \"./AddImageForm\";\nimport { getDatabase, set } from \"firebase/database\";\nimport {v4 as uid} from 'uuid'\n// this is also important ki konsa ref utha rhe ho i.e database one or storage one!\n// Yha database wla lena hota h coz we are accessing database\nimport { ref } from \"firebase/database\";\nimport { db } from \"../../firebase\";\n\nconst AddImages = (props) => {\n\n    const[isEditing, setIsEditing] = useState(false);\n\n    // Important part here is that we can upload data via two methods, i.e one is simply the fetch onw where firebase will automatically create a child node even after giving proper address\n    // Second method is below one where we can upload images via set method, this uploades / updates images at the exact address we tell it to .\n\n    const addImageHandler = (image) => {\n        const uuid = uid();\n        set(ref(db, `images/${uuid}`),{\n            name : image.name,\n            description : image.description,\n            tag : image.tag,\n            author : image.author,\n            url : image.url,\n            key : image.key,\n            uid : uuid,\n        });\n        console.log(\"UPDATED\");\n        setIsEditing(false);\n    }\n\n    const showFormHandler = (event) => {\n        setIsEditing(true);\n    }\n\n    return (\n        <div className=\"col mt-4\">\n            <div className=\"d-flex justify-content-center mb-4\">\n                <button onClick={showFormHandler} className=\"btn btn-primary btn-lg\">ADD IMAGE</button>\n            </div>\n            {isEditing && <div >\n                <AddImageForm onAddImage={addImageHandler}/>\n            </div>}\n\n        </div>\n    );\n}\nexport default AddImages;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,QAAQ,QAAO,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,EAAEC,GAAG,QAAQ,mBAAmB;AACpD,SAAQC,EAAE,IAAIC,GAAG,QAAO,MAAM;AAC9B;AACA;AACA,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,EAAE,QAAQ,gBAAgB;AAAC;AAEpC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAEzB,MAAK,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEhD;EACA;;EAEA,MAAMY,eAAe,GAAIC,KAAK,IAAK;IAC/B,MAAMC,IAAI,GAAGT,GAAG,EAAE;IAClBF,GAAG,CAACG,GAAG,CAACC,EAAE,EAAG,UAASO,IAAK,EAAC,CAAC,EAAC;MAC1BC,IAAI,EAAGF,KAAK,CAACE,IAAI;MACjBC,WAAW,EAAGH,KAAK,CAACG,WAAW;MAC/BC,GAAG,EAAGJ,KAAK,CAACI,GAAG;MACfC,MAAM,EAAGL,KAAK,CAACK,MAAM;MACrBC,GAAG,EAAGN,KAAK,CAACM,GAAG;MACfC,GAAG,EAAGP,KAAK,CAACO,GAAG;MACff,GAAG,EAAGS;IACV,CAAC,CAAC;IACFO,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBX,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMY,eAAe,GAAIC,KAAK,IAAK;IAC/Bb,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,UAAU;IAAA,wBACrB;MAAK,SAAS,EAAC,oCAAoC;MAAA,uBAC/C;QAAQ,OAAO,EAAEY,eAAgB;QAAC,SAAS,EAAC,wBAAwB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAmB;MAAA;MAAA;MAAA;IAAA,QACrF,EACLb,SAAS,iBAAI;MAAA,uBACV,QAAC,YAAY;QAAC,UAAU,EAAEE;MAAgB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC1C;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd,CAAC;AAAA,GArCKJ,SAAS;AAAA,KAATA,SAAS;AAsCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}