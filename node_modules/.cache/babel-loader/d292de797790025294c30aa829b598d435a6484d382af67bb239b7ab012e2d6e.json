{"ast":null,"code":"var _jsxFileName = \"/home/yashakabra/Desktop/React BootCamp/Imagify(NEW)/src/Components/AddImages/AddImages.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport AddImageForm from \"./AddImageForm\";\nimport { getDatabase, set } from \"firebase/database\";\n// import { uid } from \"react-uid\";\nimport { v4 as uid } from 'uuid';\n// import \nimport { ref } from \"firebase/database\";\nimport { db } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddImages = props => {\n  _s();\n  // const writeToDatabase = () => {\n  //     const uuid = uid();\n  //     set(ref(db, `/${uuid}`),{\n\n  //     });\n  // }\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  // async function addImageHandler(image){\n  //     const uuid = uid();\n  //     // console.log(uuid);\n  //     // const newImage = {\n  //     //     ...image,\n  //     //     uid : uuid,\n  //     // }\n  //     const response = await fetch(`https://reacthttp-d289b-default-rtdb.firebaseio.com/images.json`, {\n  //         method:'POST',\n  //         body: JSON.stringify(image),\n  //         headers: {\n  //             'Content-type' : 'application/json'\n  //         }\n  //     });\n  //     console.log(\"DONE UPLOADING !!\");\n  //     setIsEditing(false);\n  // }\n\n  const addImageHandler = image => {\n    // console.log(image.name, image.author, image.description, image.tag, image.url);\n    console.log(\"BEFORE SET\");\n    // console.log(image.name, image.description, image.tag, image.author);\n    set(ref(db, `images/${modalData.uid}`), {\n      name: image.name,\n      description: image.description,\n      tag: image.tag,\n      author: image.author,\n      url: modalData.imageurl,\n      key: modalData.id\n    });\n    console.log(\"UPDATED\");\n    setIsEditing(false);\n  };\n  const showFormHandler = event => {\n    setIsEditing(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showFormHandler,\n        className: \"btn btn-primary btn-lg\",\n        children: \"ADD IMAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AddImageForm, {\n        onAddImage: addImageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(AddImages, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n_c = AddImages;\nexport default AddImages;\nvar _c;\n$RefreshReg$(_c, \"AddImages\");","map":{"version":3,"names":["React","useCallback","useState","AddImageForm","getDatabase","set","v4","uid","ref","db","AddImages","props","isEditing","setIsEditing","addImageHandler","image","console","log","modalData","name","description","tag","author","url","imageurl","key","id","showFormHandler","event"],"sources":["/home/yashakabra/Desktop/React BootCamp/Imagify(NEW)/src/Components/AddImages/AddImages.js"],"sourcesContent":["import React, {useCallback, useState} from \"react\";\nimport AddImageForm from \"./AddImageForm\";\nimport { getDatabase, set } from \"firebase/database\";\n// import { uid } from \"react-uid\";\nimport {v4 as uid} from 'uuid'\n// import \nimport { ref } from \"firebase/database\";\nimport { db } from \"../../firebase\";\n\nconst AddImages = (props) => {\n\n    // const writeToDatabase = () => {\n    //     const uuid = uid();\n    //     set(ref(db, `/${uuid}`),{\n\n    //     });\n    // }\n\n\n    const[isEditing, setIsEditing] = useState(false);\n\n    // async function addImageHandler(image){\n    //     const uuid = uid();\n    //     // console.log(uuid);\n    //     // const newImage = {\n    //     //     ...image,\n    //     //     uid : uuid,\n    //     // }\n    //     const response = await fetch(`https://reacthttp-d289b-default-rtdb.firebaseio.com/images.json`, {\n    //         method:'POST',\n    //         body: JSON.stringify(image),\n    //         headers: {\n    //             'Content-type' : 'application/json'\n    //         }\n    //     });\n    //     console.log(\"DONE UPLOADING !!\");\n    //     setIsEditing(false);\n    // }\n\n    const addImageHandler = (image) => {\n    // console.log(image.name, image.author, image.description, image.tag, image.url);\n        console.log(\"BEFORE SET\");\n        // console.log(image.name, image.description, image.tag, image.author);\n        set(ref(db, `images/${modalData.uid}`),{\n            name : image.name,\n            description : image.description,\n            tag : image.tag,\n            author : image.author,\n            url : modalData.imageurl,\n            key : modalData.id\n        });\n        console.log(\"UPDATED\");\n        setIsEditing(false);\n    }\n\n    const showFormHandler = (event) => {\n        setIsEditing(true);\n    }\n\n    return (\n        <div className=\"col mt-4\">\n            <div className=\"d-flex justify-content-center mb-4\">\n                <button onClick={showFormHandler} className=\"btn btn-primary btn-lg\">ADD IMAGE</button>\n            </div>\n            {isEditing && <div >\n                <AddImageForm onAddImage={addImageHandler}/>\n            </div>}\n\n        </div>\n    );\n}\nexport default AddImages;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,QAAQ,QAAO,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,EAAEC,GAAG,QAAQ,mBAAmB;AACpD;AACA,SAAQC,EAAE,IAAIC,GAAG,QAAO,MAAM;AAC9B;AACA,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,EAAE,QAAQ,gBAAgB;AAAC;AAEpC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAEzB;EACA;EACA;;EAEA;EACA;;EAGA,MAAK,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEhD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMY,eAAe,GAAIC,KAAK,IAAK;IACnC;IACIC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB;IACAZ,GAAG,CAACG,GAAG,CAACC,EAAE,EAAG,UAASS,SAAS,CAACX,GAAI,EAAC,CAAC,EAAC;MACnCY,IAAI,EAAGJ,KAAK,CAACI,IAAI;MACjBC,WAAW,EAAGL,KAAK,CAACK,WAAW;MAC/BC,GAAG,EAAGN,KAAK,CAACM,GAAG;MACfC,MAAM,EAAGP,KAAK,CAACO,MAAM;MACrBC,GAAG,EAAGL,SAAS,CAACM,QAAQ;MACxBC,GAAG,EAAGP,SAAS,CAACQ;IACpB,CAAC,CAAC;IACFV,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtBJ,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMc,eAAe,GAAIC,KAAK,IAAK;IAC/Bf,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,UAAU;IAAA,wBACrB;MAAK,SAAS,EAAC,oCAAoC;MAAA,uBAC/C;QAAQ,OAAO,EAAEc,eAAgB;QAAC,SAAS,EAAC,wBAAwB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAmB;MAAA;MAAA;MAAA;IAAA,QACrF,EACLf,SAAS,iBAAI;MAAA,uBACV,QAAC,YAAY;QAAC,UAAU,EAAEE;MAAgB;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC1C;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd,CAAC;AAAA,GA7DKJ,SAAS;AAAA,KAATA,SAAS;AA8Df,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}