{"ast":null,"code":"var _jsxFileName = \"/home/yashakabra/Desktop/React BootCamp/Imagify/src/Components/Feed/Feed.js\",\n  _s = $RefreshSig$();\nimport { ref } from \"firebase/storage\";\nimport React, { useCallback, useState } from \"react\";\nimport { storage } from \"../../firebase\";\nimport Image from \"./Image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = props => {\n  _s();\n  const arr = {\n    src: \"./img1.jpg\",\n    name: \"Image Name1\",\n    des: \"Image Description1\",\n    owner: \"Image Owner1\"\n  };\n  const [images, setImages] = useState([]);\n  const fetchImageHandler = useCallback(async () => {\n    try {\n      const response = await fetch('https://reacthttp-d289b-default-rtdb.firebaseio.com/images.json');\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n      const data = await response.json();\n      const loadedImages = [];\n      for (const k in data) {\n        loadedImages.push({\n          id: data[k].key,\n          name: data[k].name,\n          description: data[k].description,\n          author: data[k].author\n        });\n      }\n      setImages(loadedImages);\n    } catch (error) {}\n  });\n  const imageRef = ref(storage, `images/`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          items: arr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Feed, \"UcXy1uP9nUQBHHUa1x9ChlBRK4Q=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["ref","React","useCallback","useState","storage","Image","Feed","props","arr","src","name","des","owner","images","setImages","fetchImageHandler","response","fetch","ok","Error","data","json","loadedImages","k","push","id","key","description","author","error","imageRef"],"sources":["/home/yashakabra/Desktop/React BootCamp/Imagify/src/Components/Feed/Feed.js"],"sourcesContent":["import { ref } from \"firebase/storage\";\nimport React, { useCallback, useState } from \"react\";\nimport { storage } from \"../../firebase\";\nimport Image from \"./Image\";\n\nconst Feed = (props) => {\n    const arr ={\n        src:\"./img1.jpg\",\n        name: \"Image Name1\",\n        des: \"Image Description1\",\n        owner: \"Image Owner1\"\n    };\n\n    const [images, setImages] = useState([]);\n\n    const fetchImageHandler = useCallback(async ()=> {\n        try{\n            const response = await fetch ('https://reacthttp-d289b-default-rtdb.firebaseio.com/images.json');\n            if(!response.ok){\n                throw new Error('Something went wrong');\n            }\n            const data = await response.json();\n\n            const loadedImages = [];\n            for(const k in data){\n                loadedImages.push({\n                    id:data[k].key,\n                    name:data[k].name,\n                    description:data[k].description,\n                    author:data[k].author\n                });\n            }\n            setImages(loadedImages);\n        }catch (error){\n            \n        }\n    });\n\n    const imageRef = ref(storage, `images/`)\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <Image items={arr}/>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default Feed;"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,OAAOC,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,KAAK,MAAM,SAAS;AAAC;AAE5B,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAAA;EACpB,MAAMC,GAAG,GAAE;IACPC,GAAG,EAAC,YAAY;IAChBC,IAAI,EAAE,aAAa;IACnBC,GAAG,EAAE,oBAAoB;IACzBC,KAAK,EAAE;EACX,CAAC;EAED,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,iBAAiB,GAAGb,WAAW,CAAC,YAAW;IAC7C,IAAG;MACC,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAE,iEAAiE,CAAC;MAChG,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACZ,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MAC3C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;MAElC,MAAMC,YAAY,GAAG,EAAE;MACvB,KAAI,MAAMC,CAAC,IAAIH,IAAI,EAAC;QAChBE,YAAY,CAACE,IAAI,CAAC;UACdC,EAAE,EAACL,IAAI,CAACG,CAAC,CAAC,CAACG,GAAG;UACdhB,IAAI,EAACU,IAAI,CAACG,CAAC,CAAC,CAACb,IAAI;UACjBiB,WAAW,EAACP,IAAI,CAACG,CAAC,CAAC,CAACI,WAAW;UAC/BC,MAAM,EAACR,IAAI,CAACG,CAAC,CAAC,CAACK;QACnB,CAAC,CAAC;MACN;MACAd,SAAS,CAACQ,YAAY,CAAC;IAC3B,CAAC,QAAOO,KAAK,EAAC,CAEd;EACJ,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAG9B,GAAG,CAACI,OAAO,EAAG,SAAQ,CAAC;EACxC,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,uBACtB;MAAK,SAAS,EAAC,KAAK;MAAA,uBAChB;QAAK,SAAS,EAAC,OAAO;QAAA,uBAClB,QAAC,KAAK;UAAC,KAAK,EAAEI;QAAI;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA;IAClB;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA3CKF,IAAI;AAAA,KAAJA,IAAI;AA4CV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}